@use "sass:math";
@use "./mixins";

// flexbox columns
.row {
    @include mixins.row;
    & > * {
        @include mixins.row-children;
    }
}

.col {
    flex: 1 0 0%;
    @for $i from 1 through 12 {
        &-#{$i} {
            flex: 0 0 auto;
            width: percentage(divide($i, 12)) !important;
        }
    }
    @each $col, $value in $cols {
        &-#{$value} {
            flex: 0 0 auto;
            width: #{$col} !important;
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .col {
            &-#{$bpc} {
                @for $i from 1 through 12 {
                    &-#{$i} {
                        flex: 0 0 auto;
                        width: percentage(divide($i, 12)) !important;
                    }
                }
                @each $col, $value in $cols {
                    &-#{$value} {
                        flex: 0 0 auto;
                        width: #{$col} !important;
                    }
                }
            }
        }
    }
}

.row-cols {
    @for $i from 1 through 6 {
        &-#{$i} {
            & > * {
                flex: 0 0 auto;
                width: calc(100% / #{$i}) !important;
            }
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .row-cols {
            &-#{$bpc} {
                @for $i from 1 through 6 {
                    &-#{$i} {
                        & > * {
                            flex: 0 0 auto;
                            width: calc(100% / #{$i}) !important;
                        }
                    }
                }
            }
        }
    }
}

.offset {
    @for $i from 1 through 11 {
        &-#{$i} {
            margin-left: percentage(divide($i, 12));
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .offset {
            &-#{$bpc} {
                @for $i from 1 through 11 {
                    &-#{$i} {
                        margin-left: percentage(divide($i, 12));
                    }
                }
            }
        }
    }
}

.g {
    @each $gutter, $value in $gutters {
        &-#{$value} {
            #{$prefix}-gutter-x: #{$gutter};
            #{$prefix}-gutter-y: #{$gutter};
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .g {
            &-#{$bpc} {
                @each $gutter, $value in $gutters {
                    &-#{$value} {
                        #{$prefix}-gutter-x: #{$gutter};
                        #{$prefix}-gutter-y: #{$gutter};
                    }
                }
            }
        }
    }
}

.gx {
    @each $gutter, $value in $gutters {
        &-#{$value} {
            #{$prefix}-gutter-x: #{$gutter};
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .gx {
            &-#{$bpc} {
                @each $gutter, $value in $gutters {
                    &-#{$value} {
                        #{$prefix}-gutter-x: #{$gutter};
                    }
                }
            }
        }
    }
}

.gy {
    @each $gutter, $value in $gutters {
        &-#{$value} {
            #{$prefix}-gutter-y: #{$gutter};
        }
    }
}

@each $breakpointclass, $bpc in $breakpointclasses {
    @include breakpoint("breakpoint-#{$bpc}") {
        .gy {
            &-#{$bpc} {
                @each $gutter, $value in $gutters {
                    &-#{$value} {
                        #{$prefix}-gutter-y: #{$gutter};
                    }
                }
            }
        }
    }
}
